---

- name: Create Kubernetes addon directory
  file:
    path: "{{ network_dir }}"
    state: directory

- name: "Copy {{ network }} YAML files"
  template:
    src: "{{ item }}"
    dest: "{{ network_dir }}/{{ item | basename | regex_replace('\\.j2','') }}"
  with_fileglob:
    - ../templates/{{ network }}*.j2

- name: "Check {{ network }} daemonset is working"
  shell: kubectl --kubeconfig={{ kubeadmin_config }} get ds --all-namespaces | grep {{ network }}
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: check_net
  ignore_errors: true
  changed_when: false

- name: "Create {{ network }} network daemonset"
  when: " check_net is failed and ( network == 'calico' or network == 'canal' or network == 'flannel')"
  command: kubectl apply --kubeconfig={{ kubeadmin_config }} -f {{ network_dir }}/
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true

- name: "Check k8s version for {{ network }} daemonset"
  shell: kubectl version --kubeconfig={{ kubeadmin_config }} | base64 | tr -d '\n'
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: weavenet_k8s_version
  when: "check_net is failed and ( network == 'weavenet' )"
  ignore_errors: true
  changed_when: false

- name: "Create {{ network }} network daemonset"
  when: "check_net is failed and ( network == 'weavenet' )"
  command: "kubectl apply --kubeconfig={{ kubeadmin_config }} -f https://cloud.weave.works/k8s/net?k8s-version={{ weavenet_k8s_version.stdout }}&env.IPALLOC_RANGE=10.200.0.0/16"
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
