---
- name: Create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ helm_download_dir }}'
  delegate_to: "{{ groups['master'][0] }}"

- name: Download sha256sum
  get_url:
    url: '{{ helm_mirror }}/{{ helm_redis_filename }}.sha256'
    dest: '{{ helm_download_dir }}/{{ helm_redis_filename }}.sha256'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'
  delegate_to: "{{ groups['master'][0] }}"

- name: Read sha256sum
  slurp:
    src: '{{ helm_download_dir }}/{{ helm_redis_filename }}.sha256'
  register: helm_sha256sum
  delegate_to: "{{ groups['master'][0] }}"

- name: Download Helm
  get_url:
    url: '{{ helm_mirror }}/{{ helm_redis_filename }}'
    dest: '{{ helm_download_dir }}/{{ helm_redis_filename }}'
    sha256sum: '{{ helm_sha256sum.content | b64decode | trim }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'
  delegate_to: "{{ groups['master'][0] }}"

- name: Check current version
  command: >
    {{ helm_install_dir }}/helm version --client --template {{ "'{{ if .Version }}{{ .Version }}{{ else }}{{ .Client.SemVer }}{{ end }}'" }}
  register: helm_current_version
  failed_when: no
  changed_when: no
  delegate_to: "{{ groups['master'][0] }}"

- name: current version
  debug:
    msg: '{{ helm_current_version.stdout }}'
  when: helm_current_version.rc == 0
  delegate_to: "{{ groups['master'][0] }}"

- name: Remove existing installation
  become: yes
  file:
    path: '{{ helm_install_dir }}'
    state: absent
  when:
    - helm_current_version.rc == 0
    - helm_current_version.stdout != ('v' + helm_version)
  delegate_to: "{{ groups['master'][0] }}"

- name: Create the Helm installation dir
  become: yes
  file:
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
    dest: '{{ helm_install_dir }}'
  delegate_to: "{{ groups['master'][0] }}"

- name: Install unarchive module dependencies (apt, yum, dnf, zypper)
  become: yes
  package:
    name:
      - tar
      - unzip
      - gzip
    state: present
  when: ansible_pkg_mgr in ('apt', 'yum', 'dnf', 'zypper')
  delegate_to: "{{ groups['master'][0] }}"

- name: Install Helm
  become: yes
  unarchive:
    src: '{{ helm_download_dir }}/{{ helm_redis_filename }}'
    remote_src: yes
    dest: '{{ helm_install_dir }}'
    extra_opts:
      - '--strip-components=1'
    owner: root
    group: root
    mode: 'o-w'
    creates: '{{ helm_install_dir }}/helm'
  delegate_to: "{{ groups['master'][0] }}"

- name: Create helm link
  become: yes
  file:
    src: '{{ helm_install_dir }}/helm'
    dest: '/usr/local/bin/helm'
    state: link
    owner: root
    group: root
    mode: 'u=rwx,go=rx'
  delegate_to: "{{ groups['master'][0] }}"

- name: Initialize a Helm Chart Repository
  shell: helm repo add bitnami https://charts.bitnami.com/bitnami
  register: init
  delegate_to: "{{ groups['master'][0] }}"

- name: Update Helm
  shell: helm repo update
  register: update
  delegate_to: "{{ groups['master'][0] }}"
